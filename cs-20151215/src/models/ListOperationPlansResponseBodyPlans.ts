// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class ListOperationPlansResponseBodyPlans extends $dara.Model {
  /**
   * @remarks
   * The cluster ID.
   * 
   * @example
   * c29ced64b3dfe4f33b57ca0aa9f68****
   */
  clusterId?: string;
  /**
   * @remarks
   * The time when the operation plan was created.
   * 
   * @example
   * 2023-11-21T20:01:22+08:00
   */
  created?: string;
  /**
   * @remarks
   * The expected end time of the plan.
   * 
   * @example
   * 2023-11-22T18:00:00+08:00
   */
  endTime?: string;
  /**
   * @remarks
   * The operation plan ID.
   * 
   * @example
   * P-655c9c127e0e6603ef00****
   */
  planId?: string;
  /**
   * @remarks
   * The expected start time of the plan.
   * 
   * @example
   * 2023-11-22T15:18:00+08:00
   */
  startTime?: string;
  /**
   * @remarks
   * The plan status. Valid values:
   * 
   * *   scheduled
   * *   Canceled
   * 
   * @example
   * scheduled
   */
  state?: string;
  /**
   * @remarks
   * The target ID.
   * 
   * @example
   * c29ced64b3dfe4f33b57ca0aa9f68****
   */
  targetId?: string;
  /**
   * @remarks
   * The target type.
   * 
   * @example
   * cluster
   */
  targetType?: string;
  /**
   * @remarks
   * The ID of the task generated by the execution plan.
   * 
   * @example
   * T-6764d027be846d01310006b1
   */
  taskId?: string;
  /**
   * @remarks
   * The plan type. Valid values:
   * 
   * *   cluster_upgrade
   * 
   * @example
   * cluster_upgrade
   */
  type?: string;
  static names(): { [key: string]: string } {
    return {
      clusterId: 'cluster_id',
      created: 'created',
      endTime: 'end_time',
      planId: 'plan_id',
      startTime: 'start_time',
      state: 'state',
      targetId: 'target_id',
      targetType: 'target_type',
      taskId: 'task_id',
      type: 'type',
    };
  }

  static types(): { [key: string]: any } {
    return {
      clusterId: 'string',
      created: 'string',
      endTime: 'string',
      planId: 'string',
      startTime: 'string',
      state: 'string',
      targetId: 'string',
      targetType: 'string',
      taskId: 'string',
      type: 'string',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

