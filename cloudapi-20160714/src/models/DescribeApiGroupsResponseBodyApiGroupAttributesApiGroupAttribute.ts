// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';
import { DescribeApiGroupsResponseBodyApiGroupAttributesApiGroupAttributeTags } from "./DescribeApiGroupsResponseBodyApiGroupAttributesApiGroupAttributeTags";


export class DescribeApiGroupsResponseBodyApiGroupAttributesApiGroupAttribute extends $dara.Model {
  /**
   * @remarks
   * The basepath.
   * 
   * @example
   * /v2/
   */
  basePath?: string;
  /**
   * @remarks
   * The billing status of the API group. Valid values:
   * 
   * *   **NORMAL**: The instance is normal.
   * *   **LOCKED**: The API group is locked due to overdue payments.
   * 
   * @example
   * NORMAL
   */
  billingStatus?: string;
  /**
   * @remarks
   * The creation time (UTC) of the API group.
   * 
   * @example
   * 2016-08-01T08:45:15Z
   */
  createdTime?: string;
  /**
   * @remarks
   * Group Description
   * 
   * @example
   * TrafficInformations.
   */
  description?: string;
  /**
   * @remarks
   * The ID of the API group. This ID is generated by the system and globally unique.
   * 
   * @example
   * be6d2abcc0dd4f749fc2d2edd6567164
   */
  groupId?: string;
  /**
   * @remarks
   * The name of the API group.
   * 
   * @example
   * Traffic
   */
  groupName?: string;
  /**
   * @remarks
   * The HTTPS security policy
   * 
   * @example
   * HTTPS2_TLS1_0
   */
  httpsPolicy?: string;
  /**
   * @remarks
   * The validity status of the API group. Valid values:
   * 
   * *   **NORMAL**: The instance is normal.
   * *   **LOCKED**: The API group is locked because it is not valid.
   * 
   * @example
   * NORMAL
   */
  illegalStatus?: string;
  /**
   * @remarks
   * The ID of the instance.
   * 
   * @example
   * apigateway-cn-v6419k43245xx
   */
  instanceId?: string;
  /**
   * @remarks
   * The type of the instance.
   * 
   * @example
   * VPC_SHARED
   */
  instanceType?: string;
  /**
   * @remarks
   * The last modification time (UTC) of the API group.
   * 
   * @example
   * 2016-08-01T08:45:15Z
   */
  modifiedTime?: string;
  /**
   * @remarks
   * The region to which the API group belongs.
   * 
   * @example
   * cn-hangzhou
   */
  regionId?: string;
  /**
   * @remarks
   * The second-level domain name that corresponds to the API group and is used by the CNAME of the custom domain name.
   * 
   * @example
   * be6d2abcc0dd4f749fc2d2edd6567164-cn-hangzhou.alicloudapi.com
   */
  subDomain?: string;
  /**
   * @remarks
   * The list of tags.
   */
  tags?: DescribeApiGroupsResponseBodyApiGroupAttributesApiGroupAttributeTags;
  /**
   * @remarks
   * The upper QPS limit of the API group. The default value is 500. You can increase the upper limit by submitting an application.
   * 
   * @example
   * 500
   */
  trafficLimit?: number;
  static names(): { [key: string]: string } {
    return {
      basePath: 'BasePath',
      billingStatus: 'BillingStatus',
      createdTime: 'CreatedTime',
      description: 'Description',
      groupId: 'GroupId',
      groupName: 'GroupName',
      httpsPolicy: 'HttpsPolicy',
      illegalStatus: 'IllegalStatus',
      instanceId: 'InstanceId',
      instanceType: 'InstanceType',
      modifiedTime: 'ModifiedTime',
      regionId: 'RegionId',
      subDomain: 'SubDomain',
      tags: 'Tags',
      trafficLimit: 'TrafficLimit',
    };
  }

  static types(): { [key: string]: any } {
    return {
      basePath: 'string',
      billingStatus: 'string',
      createdTime: 'string',
      description: 'string',
      groupId: 'string',
      groupName: 'string',
      httpsPolicy: 'string',
      illegalStatus: 'string',
      instanceId: 'string',
      instanceType: 'string',
      modifiedTime: 'string',
      regionId: 'string',
      subDomain: 'string',
      tags: DescribeApiGroupsResponseBodyApiGroupAttributesApiGroupAttributeTags,
      trafficLimit: 'number',
    };
  }

  validate() {
    if(this.tags && typeof (this.tags as any).validate === 'function') {
      (this.tags as any).validate();
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

