// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class ListAttackPathWhitelistResponseBodyAttackPathWhitelistList extends $dara.Model {
  /**
   * @remarks
   * Attack path whitelist ID.
   * 
   * @example
   * apwl-b33dec0acf9b42aabde032d656c0****
   */
  attackPathWhitelistId?: string;
  /**
   * @remarks
   * Timestamp of the last modification, in milliseconds.
   * 
   * @example
   * 1731897750000
   */
  lastModifiedTimestamp?: number;
  /**
   * @remarks
   * Path name.
   * 
   * @example
   * ecs_get_credential_by_create_login_profile
   */
  pathName?: string;
  /**
   * @remarks
   * Path type.
   * 
   * @example
   * role_escalation
   */
  pathType?: string;
  /**
   * @remarks
   * Remark.
   * 
   * @example
   * test
   */
  remark?: string;
  /**
   * @remarks
   * Whitelist name.
   * 
   * @example
   * test
   */
  whitelistName?: string;
  /**
   * @remarks
   * Whitelist type.
   * 
   * @example
   * PART_ASSET
   */
  whitelistType?: string;
  static names(): { [key: string]: string } {
    return {
      attackPathWhitelistId: 'AttackPathWhitelistId',
      lastModifiedTimestamp: 'LastModifiedTimestamp',
      pathName: 'PathName',
      pathType: 'PathType',
      remark: 'Remark',
      whitelistName: 'WhitelistName',
      whitelistType: 'WhitelistType',
    };
  }

  static types(): { [key: string]: any } {
    return {
      attackPathWhitelistId: 'string',
      lastModifiedTimestamp: 'number',
      pathName: 'string',
      pathType: 'string',
      remark: 'string',
      whitelistName: 'string',
      whitelistType: 'string',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class ListAttackPathWhitelistResponseBodyPageInfo extends $dara.Model {
  /**
   * @remarks
   * Number of items displayed on the current page in a paginated query.
   * 
   * @example
   * 20
   */
  count?: number;
  /**
   * @remarks
   * Current page number in a paginated query.
   * 
   * @example
   * 1
   */
  currentPage?: number;
  /**
   * @remarks
   * Number of items per page in the returned data.
   * 
   * @example
   * 20
   */
  pageSize?: number;
  /**
   * @remarks
   * Total number of items.
   * 
   * @example
   * 49
   */
  totalCount?: number;
  static names(): { [key: string]: string } {
    return {
      count: 'Count',
      currentPage: 'CurrentPage',
      pageSize: 'PageSize',
      totalCount: 'TotalCount',
    };
  }

  static types(): { [key: string]: any } {
    return {
      count: 'number',
      currentPage: 'number',
      pageSize: 'number',
      totalCount: 'number',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class ListAttackPathWhitelistResponseBody extends $dara.Model {
  /**
   * @remarks
   * List of attack path whitelists.
   */
  attackPathWhitelistList?: ListAttackPathWhitelistResponseBodyAttackPathWhitelistList[];
  /**
   * @remarks
   * Page information for paginated queries.
   */
  pageInfo?: ListAttackPathWhitelistResponseBodyPageInfo;
  /**
   * @remarks
   * The ID of this request, which is a unique identifier generated by Alibaba Cloud for the request and can be used for troubleshooting and problem localization.
   * 
   * @example
   * 89AD16CC-97EE-50F3-9B12-9E28E5C8****
   */
  requestId?: string;
  static names(): { [key: string]: string } {
    return {
      attackPathWhitelistList: 'AttackPathWhitelistList',
      pageInfo: 'PageInfo',
      requestId: 'RequestId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      attackPathWhitelistList: { 'type': 'array', 'itemType': ListAttackPathWhitelistResponseBodyAttackPathWhitelistList },
      pageInfo: ListAttackPathWhitelistResponseBodyPageInfo,
      requestId: 'string',
    };
  }

  validate() {
    if(Array.isArray(this.attackPathWhitelistList)) {
      $dara.Model.validateArray(this.attackPathWhitelistList);
    }
    if(this.pageInfo && typeof (this.pageInfo as any).validate === 'function') {
      (this.pageInfo as any).validate();
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

