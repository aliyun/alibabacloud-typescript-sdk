// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class ListImageRegistryExtraResponseBodyImageRegistryExtraInfos extends $dara.Model {
  /**
   * @remarks
   * Alibaba Cloud account ID.
   * 
   * @example
   * 176618589410****
   */
  aliUid?: number;
  /**
   * @remarks
   * Authorization token.
   * 
   * @example
   * 64ad8ddf-6a4c-46b5-8dea-b105a06bd534
   */
  authToken?: string;
  /**
   * @remarks
   * Configuration ID.
   * 
   * @example
   * 113441
   */
  id?: number;
  /**
   * @remarks
   * Namespace of the image.
   * 
   * @example
   * public-goods
   */
  namespace?: string;
  /**
   * @remarks
   * Image registry ID.
   * 
   * @example
   * 25363
   */
  registryId?: number;
  /**
   * @remarks
   * Image registry type. Values:
   * 
   * - **acr**: ACR
   * - **harbor**: Harbor
   * - **quay**: Quay
   * - **CI/CD**: Jenkins
   * 
   * @example
   * harbor
   */
  registryType?: string;
  static names(): { [key: string]: string } {
    return {
      aliUid: 'AliUid',
      authToken: 'AuthToken',
      id: 'Id',
      namespace: 'Namespace',
      registryId: 'RegistryId',
      registryType: 'RegistryType',
    };
  }

  static types(): { [key: string]: any } {
    return {
      aliUid: 'number',
      authToken: 'string',
      id: 'number',
      namespace: 'string',
      registryId: 'number',
      registryType: 'string',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class ListImageRegistryExtraResponseBody extends $dara.Model {
  /**
   * @remarks
   * Additional configuration information for the image registry.
   */
  imageRegistryExtraInfos?: ListImageRegistryExtraResponseBodyImageRegistryExtraInfos[];
  /**
   * @remarks
   * The ID of this request, which is a unique identifier generated by Alibaba Cloud for the request and can be used to troubleshoot and locate issues.
   * 
   * @example
   * 09969D2C-4FAD-429E-BFBF-9A60DEF8****
   */
  requestId?: string;
  static names(): { [key: string]: string } {
    return {
      imageRegistryExtraInfos: 'ImageRegistryExtraInfos',
      requestId: 'RequestId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      imageRegistryExtraInfos: { 'type': 'array', 'itemType': ListImageRegistryExtraResponseBodyImageRegistryExtraInfos },
      requestId: 'string',
    };
  }

  validate() {
    if(Array.isArray(this.imageRegistryExtraInfos)) {
      $dara.Model.validateArray(this.imageRegistryExtraInfos);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

