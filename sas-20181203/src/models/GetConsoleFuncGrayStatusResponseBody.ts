// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class GetConsoleFuncGrayStatusResponseBodyDataExcludeApiList extends $dara.Model {
  /**
   * @remarks
   * Action corresponding to the API.
   * 
   * @example
   * GetAttackTypeList
   */
  action?: string;
  /**
   * @remarks
   * Product Code.
   * 
   * @example
   * Sas
   */
  code?: string;
  /**
   * @remarks
   * API version.
   * 
   * @example
   * 2017-11-10
   */
  version?: string;
  static names(): { [key: string]: string } {
    return {
      action: 'Action',
      code: 'Code',
      version: 'Version',
    };
  }

  static types(): { [key: string]: any } {
    return {
      action: 'string',
      code: 'string',
      version: 'string',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class GetConsoleFuncGrayStatusResponseBodyData extends $dara.Model {
  /**
   * @remarks
   * List of APIs not hit.
   */
  excludeApiList?: GetConsoleFuncGrayStatusResponseBodyDataExcludeApiList[];
  /**
   * @remarks
   * Whether it hits the gray status.
   * 
   * @example
   * true
   */
  hit?: boolean;
  static names(): { [key: string]: string } {
    return {
      excludeApiList: 'ExcludeApiList',
      hit: 'Hit',
    };
  }

  static types(): { [key: string]: any } {
    return {
      excludeApiList: { 'type': 'array', 'itemType': GetConsoleFuncGrayStatusResponseBodyDataExcludeApiList },
      hit: 'boolean',
    };
  }

  validate() {
    if(Array.isArray(this.excludeApiList)) {
      $dara.Model.validateArray(this.excludeApiList);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class GetConsoleFuncGrayStatusResponseBody extends $dara.Model {
  /**
   * @remarks
   * Return result.
   */
  data?: GetConsoleFuncGrayStatusResponseBodyData;
  /**
   * @remarks
   * The ID of this call request, which is a unique identifier generated by Alibaba Cloud for the request. It can be used to troubleshoot and pinpoint issues.
   * 
   * @example
   * 5DFD6277-CC36-57F7-ACE6-F5952XXXXXXXX
   */
  requestId?: string;
  static names(): { [key: string]: string } {
    return {
      data: 'Data',
      requestId: 'RequestId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      data: GetConsoleFuncGrayStatusResponseBodyData,
      requestId: 'string',
    };
  }

  validate() {
    if(this.data && typeof (this.data as any).validate === 'function') {
      (this.data as any).validate();
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

