// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class DescribeSoarStrategyTaskResultResponseBodyPageInfo extends $dara.Model {
  /**
   * @remarks
   * The current page number during paginated queries.
   * 
   * @example
   * 1
   */
  pageNumber?: number;
  /**
   * @remarks
   * The maximum number of entries to display per page during paginated queries.
   * 
   * @example
   * 20
   */
  pageSize?: number;
  /**
   * @remarks
   * 总条数。
   * 
   * @example
   * 1
   */
  totalCount?: number;
  static names(): { [key: string]: string } {
    return {
      pageNumber: 'PageNumber',
      pageSize: 'PageSize',
      totalCount: 'TotalCount',
    };
  }

  static types(): { [key: string]: any } {
    return {
      pageNumber: 'number',
      pageSize: 'number',
      totalCount: 'number',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class DescribeSoarStrategyTaskResultResponseBody extends $dara.Model {
  /**
   * @remarks
   * Pagination information.
   */
  pageInfo?: DescribeSoarStrategyTaskResultResponseBodyPageInfo;
  /**
   * @remarks
   * Collection of execution records.
   */
  records?: string[];
  /**
   * @remarks
   * The ID of the current request, a unique identifier generated by Alibaba Cloud for this request, which can be used for troubleshooting and issue localization.
   * 
   * @example
   * 1683940A-E4AE-4473-8C40-F4075434****
   */
  requestId?: string;
  static names(): { [key: string]: string } {
    return {
      pageInfo: 'PageInfo',
      records: 'Records',
      requestId: 'RequestId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      pageInfo: DescribeSoarStrategyTaskResultResponseBodyPageInfo,
      records: { 'type': 'array', 'itemType': 'string' },
      requestId: 'string',
    };
  }

  validate() {
    if(this.pageInfo && typeof (this.pageInfo as any).validate === 'function') {
      (this.pageInfo as any).validate();
    }
    if(Array.isArray(this.records)) {
      $dara.Model.validateArray(this.records);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

