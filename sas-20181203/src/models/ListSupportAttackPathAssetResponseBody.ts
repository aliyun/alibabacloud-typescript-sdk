// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class ListSupportAttackPathAssetResponseBodyAttackPathAssetTypeList extends $dara.Model {
  /**
   * @remarks
   * Subtype of the cloud product asset.
   * 
   * @example
   * 0
   */
  assetSubType?: number;
  /**
   * @remarks
   * Type of the cloud product asset.
   * 
   * @example
   * 13
   */
  assetType?: number;
  /**
   * @remarks
   * Vendor of the cloud product asset.
   * 
   * @example
   * 0
   */
  vendor?: number;
  static names(): { [key: string]: string } {
    return {
      assetSubType: 'AssetSubType',
      assetType: 'AssetType',
      vendor: 'Vendor',
    };
  }

  static types(): { [key: string]: any } {
    return {
      assetSubType: 'number',
      assetType: 'number',
      vendor: 'number',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class ListSupportAttackPathAssetResponseBody extends $dara.Model {
  /**
   * @remarks
   * List of cloud product asset types for the attack path.
   */
  attackPathAssetTypeList?: ListSupportAttackPathAssetResponseBodyAttackPathAssetTypeList[];
  /**
   * @remarks
   * The ID of this request, which is a unique identifier generated by Alibaba Cloud for this request and can be used for troubleshooting and problem localization.
   * 
   * @example
   * 3956048F-9D73-5EDB-834B-4827BB48***
   */
  requestId?: string;
  static names(): { [key: string]: string } {
    return {
      attackPathAssetTypeList: 'AttackPathAssetTypeList',
      requestId: 'RequestId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      attackPathAssetTypeList: { 'type': 'array', 'itemType': ListSupportAttackPathAssetResponseBodyAttackPathAssetTypeList },
      requestId: 'string',
    };
  }

  validate() {
    if(Array.isArray(this.attackPathAssetTypeList)) {
      $dara.Model.validateArray(this.attackPathAssetTypeList);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

