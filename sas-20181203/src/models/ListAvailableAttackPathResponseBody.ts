// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class ListAvailableAttackPathResponseBodyAttackPathList extends $dara.Model {
  /**
   * @remarks
   * Path name.
   * 
   * @example
   * ecs_get_credential_by_create_login_profile
   */
  pathName?: string;
  /**
   * @remarks
   * Description of the path name.
   * 
   * @example
   * ECS Instance Can Obtain Long-term Access Credential by Enabling Console Logon for RAM User
   */
  pathNameDesc?: string;
  /**
   * @remarks
   * Path type.
   * 
   * @example
   * role_escalation
   */
  pathType?: string;
  /**
   * @remarks
   * Description of the path type.
   * 
   * @example
   * Privilege Escalation by Role
   */
  pathTypeDesc?: string;
  static names(): { [key: string]: string } {
    return {
      pathName: 'PathName',
      pathNameDesc: 'PathNameDesc',
      pathType: 'PathType',
      pathTypeDesc: 'PathTypeDesc',
    };
  }

  static types(): { [key: string]: any } {
    return {
      pathName: 'string',
      pathNameDesc: 'string',
      pathType: 'string',
      pathTypeDesc: 'string',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class ListAvailableAttackPathResponseBody extends $dara.Model {
  /**
   * @remarks
   * List of attack paths.
   */
  attackPathList?: ListAvailableAttackPathResponseBodyAttackPathList[];
  /**
   * @remarks
   * The ID of this call request, a unique identifier generated by Alibaba Cloud for the request, which can be used to troubleshoot and locate issues.
   * 
   * @example
   * 1383B0DB-D5D6-4B0C-9E6B-75939C8E****
   */
  requestId?: string;
  static names(): { [key: string]: string } {
    return {
      attackPathList: 'AttackPathList',
      requestId: 'RequestId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      attackPathList: { 'type': 'array', 'itemType': ListAvailableAttackPathResponseBodyAttackPathList },
      requestId: 'string',
    };
  }

  validate() {
    if(Array.isArray(this.attackPathList)) {
      $dara.Model.validateArray(this.attackPathList);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

