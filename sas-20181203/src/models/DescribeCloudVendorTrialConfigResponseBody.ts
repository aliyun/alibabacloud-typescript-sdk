// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class DescribeCloudVendorTrialConfigResponseBodyData extends $dara.Model {
  /**
   * @remarks
   * Multi-cloud configuration information:
   * - *AWS*: Output parameters sqsQueueName, sqsRegion
   * - *Tencent*: Output parameters kafkaUserName, kafkaBootstrapServers, kafkaTopic
   * 
   * @example
   * {\\"sqsRegion\\":\\"us-west-2\\",\\"sqsQueueName\\":\\"****\\"}
   */
  authInfo?: string;
  /**
   * @remarks
   * Error message returned when connection fails.
   * 
   * @example
   * No relevant queue found
   */
  message?: string;
  /**
   * @remarks
   * The access status of the Trail configuration. Values:
   * - **init**: Initialization in progress
   * - **verify**: Configuration verification in progress
   * - **enable**: Configuration enabled
   * - **disable**: Configuration disabled
   * - **error**: Configuration access error
   * - **timeout**: Configuration access timeout
   * 
   * @example
   * init
   */
  status?: string;
  static names(): { [key: string]: string } {
    return {
      authInfo: 'AuthInfo',
      message: 'Message',
      status: 'Status',
    };
  }

  static types(): { [key: string]: any } {
    return {
      authInfo: 'string',
      message: 'string',
      status: 'string',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class DescribeCloudVendorTrialConfigResponseBody extends $dara.Model {
  /**
   * @remarks
   * Returned data.
   */
  data?: DescribeCloudVendorTrialConfigResponseBodyData;
  /**
   * @remarks
   * The ID of this request, which is a unique identifier generated by Alibaba Cloud for this request and can be used for troubleshooting and problem localization.
   * 
   * @example
   * 43313389-DED8-5BB7-8CB9-F22CDEB7****
   */
  requestId?: string;
  static names(): { [key: string]: string } {
    return {
      data: 'Data',
      requestId: 'RequestId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      data: DescribeCloudVendorTrialConfigResponseBodyData,
      requestId: 'string',
    };
  }

  validate() {
    if(this.data && typeof (this.data as any).validate === 'function') {
      (this.data as any).validate();
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

