// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class DescribeAllRegionsStatisticsResponseBodyData extends $dara.Model {
  /**
   * @remarks
   * The number of logons to the asset.
   * 
   * @example
   * 0
   */
  account?: number;
  /**
   * @remarks
   * The total number of unfixed baseline risks.
   * 
   * @example
   * 2
   */
  health?: number;
  /**
   * @remarks
   * The number of alerts that are generated by Server Guard or Security Center.
   * 
   * > 
   * 
   * *   If **From** is set to **sas**, this parameter indicates the number of alerts that are generated by Security Center.
   * 
   * *   If **From** is set to **aqs**, this parameter indicates the number of alerts that are generated by Server Guard.
   * 
   * @example
   * 0
   */
  newSuspicious?: number;
  /**
   * @remarks
   * The number of alerts that are generated by Server Guard.
   * 
   * @example
   * 2
   */
  suspicious?: number;
  /**
   * @remarks
   * The number of webshell alerts.
   * 
   * @example
   * 1
   */
  trojan?: number;
  /**
   * @remarks
   * The number of unfixed vulnerabilities.
   * 
   * @example
   * 17
   */
  vul?: number;
  static names(): { [key: string]: string } {
    return {
      account: 'Account',
      health: 'Health',
      newSuspicious: 'NewSuspicious',
      suspicious: 'Suspicious',
      trojan: 'Trojan',
      vul: 'Vul',
    };
  }

  static types(): { [key: string]: any } {
    return {
      account: 'number',
      health: 'number',
      newSuspicious: 'number',
      suspicious: 'number',
      trojan: 'number',
      vul: 'number',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class DescribeAllRegionsStatisticsResponseBody extends $dara.Model {
  /**
   * @remarks
   * The data returned.
   */
  data?: DescribeAllRegionsStatisticsResponseBodyData;
  /**
   * @remarks
   * The request ID.
   * 
   * @example
   * B9A68671-BD84-55CD-807A-BA3A5490FCB4
   */
  requestId?: string;
  static names(): { [key: string]: string } {
    return {
      data: 'Data',
      requestId: 'RequestId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      data: DescribeAllRegionsStatisticsResponseBodyData,
      requestId: 'string',
    };
  }

  validate() {
    if(this.data && typeof (this.data as any).validate === 'function') {
      (this.data as any).validate();
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

