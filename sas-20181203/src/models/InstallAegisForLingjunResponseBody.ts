// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class InstallAegisForLingjunResponseBodyInvokeTasks extends $dara.Model {
  /**
   * @remarks
   * Installation task ID for the Lingjun machine.
   * 
   * @example
   * t-hz05r677e6w****
   */
  invokeId?: string;
  /**
   * @remarks
   * List of unique UUIDs for Lingjun bare metal.
   */
  uuids?: string[];
  static names(): { [key: string]: string } {
    return {
      invokeId: 'InvokeId',
      uuids: 'Uuids',
    };
  }

  static types(): { [key: string]: any } {
    return {
      invokeId: 'string',
      uuids: { 'type': 'array', 'itemType': 'string' },
    };
  }

  validate() {
    if(Array.isArray(this.uuids)) {
      $dara.Model.validateArray(this.uuids);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class InstallAegisForLingjunResponseBody extends $dara.Model {
  /**
   * @remarks
   * List of installation tasks returned.
   */
  invokeTasks?: InstallAegisForLingjunResponseBodyInvokeTasks[];
  /**
   * @remarks
   * The ID of this request, which is a unique identifier generated by Alibaba Cloud for this request and can be used for troubleshooting and problem localization.
   * 
   * @example
   * 7BC55C8F-226E-5AF5-9A2C-2EC43864****
   */
  requestId?: string;
  /**
   * @remarks
   * Indicates whether the API call was successful. Values:
   * 
   * - **true**: The API call was successful.
   * - **false**: The API call failed.
   * 
   * @example
   * true
   */
  success?: boolean;
  static names(): { [key: string]: string } {
    return {
      invokeTasks: 'InvokeTasks',
      requestId: 'RequestId',
      success: 'Success',
    };
  }

  static types(): { [key: string]: any } {
    return {
      invokeTasks: { 'type': 'array', 'itemType': InstallAegisForLingjunResponseBodyInvokeTasks },
      requestId: 'string',
      success: 'boolean',
    };
  }

  validate() {
    if(Array.isArray(this.invokeTasks)) {
      $dara.Model.validateArray(this.invokeTasks);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

