// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';
import { GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataDagInfo } from "./GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataDagInfo";
import { GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataDbBaseInfo } from "./GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataDbBaseInfo";
import { GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataInstances } from "./GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataInstances";
import { GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataNextFireTimeResult } from "./GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataNextFireTimeResult";


export class GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraData extends $dara.Model {
  /**
   * @remarks
   * The information about the workflow.
   */
  dagInfo?: GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataDagInfo;
  /**
   * @remarks
   * The database information related to data archiving tickets.
   */
  dbBaseInfo?: GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataDbBaseInfo;
  /**
   * @remarks
   * The total number of archiving tasks.
   * 
   * @example
   * 2
   */
  instanceTotal?: number;
  /**
   * @remarks
   * The list of archiving tasks.
   */
  instances?: GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataInstances[];
  /**
   * @remarks
   * The time when the next task is triggered.
   */
  nextFireTimeResult?: GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataNextFireTimeResult;
  /**
   * @remarks
   * The page number.
   * 
   * @example
   * 10
   */
  pageIndex?: number;
  /**
   * @remarks
   * The number of entries per page.
   * 
   * @example
   * 20
   */
  pageSize?: number;
  /**
   * @remarks
   * The name of the temporary table that is generated by the archiving task (indicated by the archiving task ID).
   * 
   * @example
   * {
   *       "803***": [
   *             "tmp_dms_21321_20230704144336_temp_test_check"
   *       ]
   * }
   */
  tempTableNameMap?: { [key: string]: any };
  static names(): { [key: string]: string } {
    return {
      dagInfo: 'DagInfo',
      dbBaseInfo: 'DbBaseInfo',
      instanceTotal: 'InstanceTotal',
      instances: 'Instances',
      nextFireTimeResult: 'NextFireTimeResult',
      pageIndex: 'PageIndex',
      pageSize: 'PageSize',
      tempTableNameMap: 'TempTableNameMap',
    };
  }

  static types(): { [key: string]: any } {
    return {
      dagInfo: GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataDagInfo,
      dbBaseInfo: GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataDbBaseInfo,
      instanceTotal: 'number',
      instances: { 'type': 'array', 'itemType': GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataInstances },
      nextFireTimeResult: GetDataArchiveOrderDetailResponseBodyDataArchiveOrderDetailPluginExtraDataNextFireTimeResult,
      pageIndex: 'number',
      pageSize: 'number',
      tempTableNameMap: { 'type': 'map', 'keyType': 'string', 'valueType': 'any' },
    };
  }

  validate() {
    if(this.dagInfo && typeof (this.dagInfo as any).validate === 'function') {
      (this.dagInfo as any).validate();
    }
    if(this.dbBaseInfo && typeof (this.dbBaseInfo as any).validate === 'function') {
      (this.dbBaseInfo as any).validate();
    }
    if(Array.isArray(this.instances)) {
      $dara.Model.validateArray(this.instances);
    }
    if(this.nextFireTimeResult && typeof (this.nextFireTimeResult as any).validate === 'function') {
      (this.nextFireTimeResult as any).validate();
    }
    if(this.tempTableNameMap) {
      $dara.Model.validateMap(this.tempTableNameMap);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

