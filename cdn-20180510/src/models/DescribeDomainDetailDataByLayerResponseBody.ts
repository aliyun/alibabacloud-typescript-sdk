// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class DescribeDomainDetailDataByLayerResponseBodyDataDataModule extends $dara.Model {
  /**
   * @remarks
   * The timestamp of the data returned.
   * 
   * @example
   * 2
   */
  acc?: number;
  /**
   * @remarks
   * The bandwidth of IPv6 requests. Unit: bit/s.
   * 
   * @example
   * 21060178715.146667
   */
  bps?: number;
  /**
   * @remarks
   * The number of requests.
   * 
   * @example
   * example.com
   */
  domainName?: string;
  /**
   * @remarks
   * - You can call this operation up to 20 times per second per account.
   * - If you do not set the StartTime or EndTime parameter, the request returns the data collected in the last 24 hours. If you set both these parameters, the request returns the data collected within the specified time range.
   * 
   * **Time granularity**
   * 
   * The following table describes the time granularity, the time period within which historical data is available, and the data delay, which vary with the maximum time range per query. 
   * 
   * | Time granularity | Maximum time range per query | Historical data available | Data delay |
   * | ---------------- | ---------------------------- | ------------------------- | ---------- |
   * | 5 minutes | 3 days | 93 days | 15 minutes |
   * | 1 hour | 31 days | 186 days | 4 hours |
   * | 1 days | 366 days | 366 days | 04:00 on the next day |
   * 
   * @example
   * 200:44349|206:1753719|304:45|403:1095|416:1|499:332
   */
  httpCode?: string;
  /**
   * @remarks
   * The bandwidth. Unit: bit/s.
   * 
   * @example
   * 1
   */
  ipv6Acc?: number;
  /**
   * @remarks
   * The number of IPv6 requests.
   * 
   * @example
   * 0
   */
  ipv6Bps?: number;
  /**
   * @remarks
   * The amount of network traffic generated by IPv6 requests. Unit: bytes.
   * 
   * @example
   * 0
   */
  ipv6Qps?: number;
  /**
   * @remarks
   * The proportions of HTTP status codes.
   * 
   * @example
   * 141718944482
   */
  ipv6Traf?: number;
  /**
   * @remarks
   * The number of requests.
   * 
   * @example
   * 5998.47
   */
  qps?: number;
  /**
   * @remarks
   * The domain name.
   * 
   * @example
   * 2020-07-05T22:00:00Z
   */
  timeStamp?: string;
  /**
   * @remarks
   * The bandwidth of IPv6 requests. Unit: bit/s.
   * 
   * @example
   * 789756701818
   */
  traf?: number;
  static names(): { [key: string]: string } {
    return {
      acc: 'Acc',
      bps: 'Bps',
      domainName: 'DomainName',
      httpCode: 'HttpCode',
      ipv6Acc: 'Ipv6Acc',
      ipv6Bps: 'Ipv6Bps',
      ipv6Qps: 'Ipv6Qps',
      ipv6Traf: 'Ipv6Traf',
      qps: 'Qps',
      timeStamp: 'TimeStamp',
      traf: 'Traf',
    };
  }

  static types(): { [key: string]: any } {
    return {
      acc: 'number',
      bps: 'number',
      domainName: 'string',
      httpCode: 'string',
      ipv6Acc: 'number',
      ipv6Bps: 'number',
      ipv6Qps: 'number',
      ipv6Traf: 'number',
      qps: 'number',
      timeStamp: 'string',
      traf: 'number',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class DescribeDomainDetailDataByLayerResponseBodyData extends $dara.Model {
  dataModule?: DescribeDomainDetailDataByLayerResponseBodyDataDataModule[];
  static names(): { [key: string]: string } {
    return {
      dataModule: 'DataModule',
    };
  }

  static types(): { [key: string]: any } {
    return {
      dataModule: { 'type': 'array', 'itemType': DescribeDomainDetailDataByLayerResponseBodyDataDataModule },
    };
  }

  validate() {
    if(Array.isArray(this.dataModule)) {
      $dara.Model.validateArray(this.dataModule);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class DescribeDomainDetailDataByLayerResponseBody extends $dara.Model {
  /**
   * @remarks
   * The number of IPv6 requests per second.
   */
  data?: DescribeDomainDetailDataByLayerResponseBodyData;
  /**
   * @remarks
   * The number of queries per second.
   * 
   * @example
   * BEA5625F-8FCF-48F4-851B-CA63946DA664
   */
  requestId?: string;
  static names(): { [key: string]: string } {
    return {
      data: 'Data',
      requestId: 'RequestId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      data: DescribeDomainDetailDataByLayerResponseBodyData,
      requestId: 'string',
    };
  }

  validate() {
    if(this.data && typeof (this.data as any).validate === 'function') {
      (this.data as any).validate();
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

