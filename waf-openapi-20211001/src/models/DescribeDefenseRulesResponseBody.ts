// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class DescribeDefenseRulesResponseBodyRules extends $dara.Model {
  /**
   * @example
   * {"empty":"test"}
   * 
   * @deprecated
   */
  actionExternal?: string;
  /**
   * @remarks
   * The details of the protection rule. The value is a string that contains multiple parameters in the JSON format. For more information, see the "**Rule parameters**" section in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.
   * 
   * @example
   * {\\"policyId\\":1012,\\"action\\":\\"block\\"}
   */
  config?: string;
  /**
   * @remarks
   * The origin of the protection rule. Valid values:
   * 
   * *   **custom:** The protection rule is created by the user.
   * *   **system:** The protection rule is automatically generated by the system.
   * 
   * @example
   * custom
   */
  defenseOrigin?: string;
  /**
   * @remarks
   * The protection module for which the protection rule is created. Valid values:
   * 
   * *   **waf_group**: the basic protection rule module.
   * *   **waf_base_compliance**: the protocol compliance feature of the basic protection rule module.
   * *   **waf_base_sema**: the semantic analysis feature of the basic protection rule module.
   * *   **cc**: the HTTP flood protection module.
   * *   **antiscan_dirscan**: the directory traversal blocking feature of the scan protection module.
   * *   **antiscan_highfreq**: the high-frequency scanning blocking feature of the scan protection module.
   * *   **antiscan_scantools**: the scanner blocking feature of the scan protection module.
   * *   **ip_blacklist**: the IP address blacklist module.
   * *   **custom_acl**: the custom rule module.
   * *   **region_block**: the region blacklist module.
   * *   **tamperproof**: the website tamper-proofing module.
   * *   **dlp**: the data leakage prevention module.
   * *   **custom_response_block**: the custom response module.
   * 
   * @example
   * waf_group
   */
  defenseScene?: string;
  defenseType?: string;
  /**
   * @example
   * test
   * 
   * @deprecated
   */
  description?: string;
  /**
   * @example
   * 123,456
   * 
   * @deprecated
   */
  detailRuleIds?: string;
  /**
   * @example
   * empty
   * 
   * @deprecated
   */
  externalInfo?: string;
  gmtCreate?: number;
  /**
   * @remarks
   * The most recent time when the protection rule was modified.
   * 
   * @example
   * 1665460629000
   */
  gmtModified?: number;
  resource?: string;
  /**
   * @remarks
   * The ID of the protection rule.
   * 
   * @example
   * 42755
   */
  ruleId?: number;
  /**
   * @remarks
   * The name of the protection rule.
   * 
   * @example
   * rules_41
   */
  ruleName?: string;
  /**
   * @example
   * test
   * 
   * @deprecated
   */
  ruleType?: string;
  /**
   * @remarks
   * The status of the protection rule. Valid values:
   * 
   * *   **0:** disabled.
   * *   **1:** enabled.
   * 
   * @example
   * 1
   */
  status?: number;
  /**
   * @remarks
   * The ID of the protection rule template.
   * 
   * @example
   * 5673
   */
  templateId?: number;
  static names(): { [key: string]: string } {
    return {
      actionExternal: 'ActionExternal',
      config: 'Config',
      defenseOrigin: 'DefenseOrigin',
      defenseScene: 'DefenseScene',
      defenseType: 'DefenseType',
      description: 'Description',
      detailRuleIds: 'DetailRuleIds',
      externalInfo: 'ExternalInfo',
      gmtCreate: 'GmtCreate',
      gmtModified: 'GmtModified',
      resource: 'Resource',
      ruleId: 'RuleId',
      ruleName: 'RuleName',
      ruleType: 'RuleType',
      status: 'Status',
      templateId: 'TemplateId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      actionExternal: 'string',
      config: 'string',
      defenseOrigin: 'string',
      defenseScene: 'string',
      defenseType: 'string',
      description: 'string',
      detailRuleIds: 'string',
      externalInfo: 'string',
      gmtCreate: 'number',
      gmtModified: 'number',
      resource: 'string',
      ruleId: 'number',
      ruleName: 'string',
      ruleType: 'string',
      status: 'number',
      templateId: 'number',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class DescribeDefenseRulesResponseBody extends $dara.Model {
  /**
   * @remarks
   * The ID of the request.
   * 
   * @example
   * 80736FA5-FA87-55F6-AA69-C5477C6FE6D0
   */
  requestId?: string;
  /**
   * @remarks
   * The protection rules.
   */
  rules?: DescribeDefenseRulesResponseBodyRules[];
  /**
   * @remarks
   * The total number of returned entries.
   * 
   * @example
   * 2
   */
  totalCount?: number;
  static names(): { [key: string]: string } {
    return {
      requestId: 'RequestId',
      rules: 'Rules',
      totalCount: 'TotalCount',
    };
  }

  static types(): { [key: string]: any } {
    return {
      requestId: 'string',
      rules: { 'type': 'array', 'itemType': DescribeDefenseRulesResponseBodyRules },
      totalCount: 'number',
    };
  }

  validate() {
    if(Array.isArray(this.rules)) {
      $dara.Model.validateArray(this.rules);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

