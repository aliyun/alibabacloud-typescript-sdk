// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class DescribeDefenseRuleResponseBodyRule extends $dara.Model {
  /**
   * @remarks
   * The details of the protection rule. The value is a JSON string that contains multiple parameters. For more information, see the "**Protection rule parameters**" section of the [CreateDefenseRule](~~CreateDefenseRule~~) topic.
   * 
   * @example
   * {\\"status\\":1,\\"policyId\\":1012,\\"action\\":\\"block\\"}
   */
  config?: string;
  /**
   * @remarks
   * The origin of the protection rule. Valid values:
   * 
   * *   **custom:** The protection rule is created by the user.
   * *   **system:** The protection rule is automatically generated by the system.
   * 
   * @example
   * custom
   */
  defenseOrigin?: string;
  /**
   * @remarks
   * The scenario in which the protection rule is used. For more information, see the description of **DefenseScene** in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.
   * 
   * @example
   * waf_group
   */
  defenseScene?: string;
  /**
   * @remarks
   * The most recent time when the protection rule was modified.
   * 
   * @example
   * 1665196746000
   */
  gmtModified?: number;
  /**
   * @remarks
   * The ID of the protection rule.
   * 
   * @example
   * 2732975
   */
  ruleId?: number;
  /**
   * @remarks
   * The name of the protection rule.
   * 
   * @example
   * test1
   */
  ruleName?: string;
  /**
   * @remarks
   * The status of the protection rule. Valid values:
   * 
   * *   **0:** disabled.
   * *   **1:** enabled.
   * 
   * @example
   * 1
   */
  status?: number;
  /**
   * @remarks
   * The ID of the protection rule template.
   * 
   * @example
   * 9114
   */
  templateId?: number;
  static names(): { [key: string]: string } {
    return {
      config: 'Config',
      defenseOrigin: 'DefenseOrigin',
      defenseScene: 'DefenseScene',
      gmtModified: 'GmtModified',
      ruleId: 'RuleId',
      ruleName: 'RuleName',
      status: 'Status',
      templateId: 'TemplateId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      config: 'string',
      defenseOrigin: 'string',
      defenseScene: 'string',
      gmtModified: 'number',
      ruleId: 'number',
      ruleName: 'string',
      status: 'number',
      templateId: 'number',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

