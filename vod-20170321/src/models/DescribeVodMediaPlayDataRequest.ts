// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class DescribeVodMediaPlayDataRequest extends $dara.Model {
  /**
   * @remarks
   * The ID of the media file (VideoId). You can specify this parameter to query all playback data of a media file. You can specify only one media ID. You can use one of the following methods to obtain the ID:
   * 
   * *   Log on to the [ApsaraVideo VOD console](https://vod.console.aliyun.com). In the left-side navigation pane, choose **Media Files** > **Audio/Video**. On the page that appears, view the media ID.
   * *   Obtain the value of the VideoId parameter in the response to the [CreateUploadVideo](~~CreateUploadVideo~~) operation that you called to upload the audio or video file.
   * *   Obtain the value of VideoId by calling the [SearchMedia](~~SearchMedia~~) operation. This method is applicable to files that have been uploaded.
   * 
   * @example
   * 9ae2af636ca6c10412f44891fc****
   */
  mediaId?: string;
  /**
   * @remarks
   * The name of the metric. This parameter must be specified together with the `OrderType` parameter. You can specify this parameter to sort the returned data in ascending or descending order based on specific metrics. Valid values:
   * 
   * *   **PlaySuccessVv**: the total number of views.
   * *   **PlayPerVv**: the average views per viewer.
   * *   **PlayDuration**: the total playback duration.
   * *   **PlayDurationPerUv**: the average playback duration per viewer.
   * 
   * @example
   * PlaySuccessVv
   */
  orderName?: string;
  /**
   * @remarks
   * The sort type. This parameter must be specified together with the `OrderName` parameter. You can specify this parameter to sort the returned data in ascending or descending order based on specific metrics. Valid values:
   * 
   * *   **ASC**: The returned data is sorted in ascending order.
   * *   **DESC**: The returned data is sorted in descending order.
   * 
   * @example
   * ASC
   */
  orderType?: string;
  /**
   * @remarks
   * The operating system of the player. You can specify this parameter to query all playback data generated on a specific operating system. Valid values:
   * 
   * *   **Android**
   * *   **iOS**
   * *   **Windows**
   * *   **macOS**
   * *   **Linux**
   * 
   * @example
   * Android
   */
  os?: string;
  /**
   * @remarks
   * The number of the page. You can specify a page number to return data from the specified page.
   * 
   * This parameter is required.
   * 
   * @example
   * 1
   */
  pageNo?: number;
  /**
   * @remarks
   * The number of entries per page. Maximum value: 100.
   * 
   * This parameter is required.
   * 
   * @example
   * 20
   */
  pageSize?: number;
  /**
   * @remarks
   * The playback time. Specify the value in the yyyyMMdd format.
   * 
   * > *   You can query data only by day.
   * > *   You can query only data within the last 30 days.
   * 
   * @example
   * 20240322
   */
  playDate?: string;
  /**
   * @remarks
   * The region in which ApsaraVideo VOD is activated. You can specify this parameter to query all playback data generated only in a specific region. Valid values:
   * 
   * *   **cn-beijing**: China (Beijing)
   * *   **cn-shanghai**: China (Shanghai)
   * *   **cn-shenzhen**: China (Shenzhen)
   * *   **ap-northeast-1**: Japan (Tokyo)
   * *   **ap-southeast-1**: Singapore
   * *   **ap-southeast-5**: Indonesia (Jakarta)
   * *   **eu-central-1**: Germany (Frankfurt)
   * 
   * @example
   * cn-beijing
   */
  region?: string;
  /**
   * @remarks
   * The type of the player SDK. You can specify this parameter to query all playback data generated by using a specific type of player SDK. Valid values:
   * 
   * *   **Native**: ApsaraVideo Player SDK for Android or ApsaraVideo Player SDK for iOS
   * *   **Web**: ApsaraVideo Player SDK for Web
   * 
   * @example
   * Native
   */
  terminalType?: string;
  static names(): { [key: string]: string } {
    return {
      mediaId: 'MediaId',
      orderName: 'OrderName',
      orderType: 'OrderType',
      os: 'Os',
      pageNo: 'PageNo',
      pageSize: 'PageSize',
      playDate: 'PlayDate',
      region: 'Region',
      terminalType: 'TerminalType',
    };
  }

  static types(): { [key: string]: any } {
    return {
      mediaId: 'string',
      orderName: 'string',
      orderType: 'string',
      os: 'string',
      pageNo: 'number',
      pageSize: 'number',
      playDate: 'string',
      region: 'string',
      terminalType: 'string',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

