// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';
import { ListTransitRouterRouteEntriesResponseBodyTransitRouterRouteEntriesPathAttributes } from "./ListTransitRouterRouteEntriesResponseBodyTransitRouterRouteEntriesPathAttributes";


export class ListTransitRouterRouteEntriesResponseBodyTransitRouterRouteEntries extends $dara.Model {
  /**
   * @remarks
   * The time when the route entry was created.
   * 
   * The time follows the ISO8601 standard in the YYYY-MM-DDThh:mmZ format. The time is displayed in UTC.
   * 
   * >  This parameter is returned only for static routes.
   * 
   * @example
   * 2021-06-15T07:01Z
   */
  createTime?: string;
  /**
   * @remarks
   * Indicates whether the route can be managed. Valid values:
   * 
   * *   **true**: The route can be managed. You can delete the route.
   * *   **false**: The route cannot be managed because it is automatically generated by the system.
   * 
   * @example
   * false
   */
  operationalMode?: boolean;
  /**
   * @remarks
   * The route attributes.
   */
  pathAttributes?: ListTransitRouterRouteEntriesResponseBodyTransitRouterRouteEntriesPathAttributes;
  /**
   * @remarks
   * The prefix list ID.
   * 
   * @example
   * pl-k1ainl66z3527773d****
   */
  prefixListId?: string;
  /**
   * @remarks
   * The route tag.
   * 
   * Only **PermitVbr** may be returned, which indicates that the route is advertised only to the route tables of the virtual border routers (VBRs) that are connected to the transit router.
   * 
   * >  This parameter is returned only for routes whose CIDR blocks are automatically generated by the system.
   * 
   * @example
   * PermitVbr
   */
  tag?: string;
  /**
   * @remarks
   * The route description.
   * 
   * >  This parameter is returned only for static routes.
   * 
   * @example
   * CidrRoute
   */
  transitRouterRouteEntryDescription?: string;
  /**
   * @remarks
   * The destination CIDR block of the route entry. An IPv4 or IPv6 CIDR block is returned.
   * 
   * @example
   * 192.168.0.0/24
   */
  transitRouterRouteEntryDestinationCidrBlock?: string;
  /**
   * @remarks
   * The route ID.
   * 
   * >  This parameter is returned only for static routes.
   * 
   * @example
   * rte-oklkgwmj97z6dn****
   */
  transitRouterRouteEntryId?: string;
  /**
   * @remarks
   * The route name.
   * 
   * >  This parameter is returned only for static routes.
   * 
   * @example
   * testname
   */
  transitRouterRouteEntryName?: string;
  /**
   * @remarks
   * The next hop ID. This parameter is not returned if the route is a blackhole route.
   * 
   * @example
   * tr-attach-vx6iwhjr1x1j78****
   */
  transitRouterRouteEntryNextHopId?: string;
  /**
   * @remarks
   * The next hop ID.
   * 
   * @example
   * vpc-m5ent6du8deaq5*****
   */
  transitRouterRouteEntryNextHopResourceId?: string;
  /**
   * @remarks
   * The next hop type. Valid values:
   * 
   * *   **VPC**
   * *   **VBR**
   * *   **TR**
   * *   **VPN**
   * 
   * @example
   * VPC
   */
  transitRouterRouteEntryNextHopResourceType?: string;
  /**
   * @remarks
   * The next hop type. Valid values:
   * 
   * *   **BlackHole**: a blackhole route. Packets destined for the destination CIDR block of the route are dropped.
   * *   **Attachment**: a network instance connection. Packets destined for the destination CIDR block of the route are forwarded to the specified network instance connection.
   * 
   * @example
   * BlackHole
   */
  transitRouterRouteEntryNextHopType?: string;
  /**
   * @remarks
   * The source instance ID.
   * 
   * @example
   * vpc-m5ent6du8deaq5*****
   */
  transitRouterRouteEntryOriginResourceId?: string;
  /**
   * @remarks
   * The source instance type. Valid values:
   * 
   * *   **VPC**
   * *   **VBR**
   * *   **TR**
   * *   **VPN**
   * 
   * @example
   * VPC
   */
  transitRouterRouteEntryOriginResourceType?: string;
  /**
   * @remarks
   * The route status. Valid values:
   * 
   * *   **Active**
   * *   **Rejected**
   * *   **Prohibited**
   * *   **Standby**
   * *   **Candidate**
   * *   **Creating**
   * *   **Deleting**
   * 
   * @example
   * Active
   */
  transitRouterRouteEntryStatus?: string;
  /**
   * @remarks
   * The type of the route. Valid values:
   * 
   * *   **Static**: static routes.
   * *   **Propagated**: automatically learned by the route table.
   * 
   * @example
   * Static
   */
  transitRouterRouteEntryType?: string;
  static names(): { [key: string]: string } {
    return {
      createTime: 'CreateTime',
      operationalMode: 'OperationalMode',
      pathAttributes: 'PathAttributes',
      prefixListId: 'PrefixListId',
      tag: 'Tag',
      transitRouterRouteEntryDescription: 'TransitRouterRouteEntryDescription',
      transitRouterRouteEntryDestinationCidrBlock: 'TransitRouterRouteEntryDestinationCidrBlock',
      transitRouterRouteEntryId: 'TransitRouterRouteEntryId',
      transitRouterRouteEntryName: 'TransitRouterRouteEntryName',
      transitRouterRouteEntryNextHopId: 'TransitRouterRouteEntryNextHopId',
      transitRouterRouteEntryNextHopResourceId: 'TransitRouterRouteEntryNextHopResourceId',
      transitRouterRouteEntryNextHopResourceType: 'TransitRouterRouteEntryNextHopResourceType',
      transitRouterRouteEntryNextHopType: 'TransitRouterRouteEntryNextHopType',
      transitRouterRouteEntryOriginResourceId: 'TransitRouterRouteEntryOriginResourceId',
      transitRouterRouteEntryOriginResourceType: 'TransitRouterRouteEntryOriginResourceType',
      transitRouterRouteEntryStatus: 'TransitRouterRouteEntryStatus',
      transitRouterRouteEntryType: 'TransitRouterRouteEntryType',
    };
  }

  static types(): { [key: string]: any } {
    return {
      createTime: 'string',
      operationalMode: 'boolean',
      pathAttributes: ListTransitRouterRouteEntriesResponseBodyTransitRouterRouteEntriesPathAttributes,
      prefixListId: 'string',
      tag: 'string',
      transitRouterRouteEntryDescription: 'string',
      transitRouterRouteEntryDestinationCidrBlock: 'string',
      transitRouterRouteEntryId: 'string',
      transitRouterRouteEntryName: 'string',
      transitRouterRouteEntryNextHopId: 'string',
      transitRouterRouteEntryNextHopResourceId: 'string',
      transitRouterRouteEntryNextHopResourceType: 'string',
      transitRouterRouteEntryNextHopType: 'string',
      transitRouterRouteEntryOriginResourceId: 'string',
      transitRouterRouteEntryOriginResourceType: 'string',
      transitRouterRouteEntryStatus: 'string',
      transitRouterRouteEntryType: 'string',
    };
  }

  validate() {
    if(this.pathAttributes && typeof (this.pathAttributes as any).validate === 'function') {
      (this.pathAttributes as any).validate();
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

