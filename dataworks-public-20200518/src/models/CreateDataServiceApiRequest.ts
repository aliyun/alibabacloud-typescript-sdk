// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class CreateDataServiceApiRequest extends $dara.Model {
  /**
   * @remarks
   * The description of the API.
   * 
   * This parameter is required.
   * 
   * @example
   * Test API description
   */
  apiDescription?: string;
  /**
   * @remarks
   * The type of the API. Valid values: 0, 1, and 2. The value 0 indicates that the API is generated in wizard mode. The value 1 indicates that the API is generated in script mode. The value 2 indicates that the API is generated by registration.
   * 
   * This parameter is required.
   * 
   * @example
   * 0
   */
  apiMode?: number;
  /**
   * @remarks
   * The name of the API. The name must be 4 to 50 characters in length. The name can contain letters, digits, and underscores (_) and must start with a letter.
   * 
   * This parameter is required.
   * 
   * @example
   * Test API name
   */
  apiName?: string;
  /**
   * @remarks
   * The path of the API. The path cannot exceed 200 characters in length. The path can contain letters, digits, underscores (_), and hyphens (-) and must start with a forward slash (/).
   * 
   * This parameter is required.
   * 
   * @example
   * /test/1
   */
  apiPath?: string;
  /**
   * @remarks
   * The ID of the folder used to store the API. The ID of the root folder in a business process is 0. The ID of the folder created by a user must be greater than 0.
   * 
   * @example
   * 0
   */
  folderId?: number;
  /**
   * @remarks
   * The business process ID.
   * 
   * This parameter is required.
   * 
   * @example
   * Business process ID
   */
  groupId?: string;
  /**
   * @remarks
   * The workspace ID.
   * 
   * This parameter is required.
   * 
   * @example
   * 10000
   */
  projectId?: number;
  /**
   * @remarks
   * The protocol used by the API. Valid values: 0 and 1. The value 0 indicates HTTP. The value 1 indicates HTTPS. You can specify multiple protocols. Separate them with commas (,).
   * 
   * This parameter is required.
   * 
   * @example
   * 0,1
   */
  protocols?: string;
  /**
   * @remarks
   * The details of the API generated by registration. For more information, see the registrationDetails parameter returned by the [GetDataServiceApi](https://help.aliyun.com/document_detail/174013.html) operation.
   * 
   * @example
   * {"failedResultSample":"fail","registrationErrorCodes":[{"errorCode":"e1","errorMessage":"msg1","errorSolution":"sol1"},{"errorCode":"e2","errorMessage":"msg2","errorSolution":"sol2"}],"registrationRequestParameters":[{"columnName":"","defaultValue":"","exampleValue":"","isRequiredParameter":true,"parameterDataType":0,"parameterDescription":"","parameterName":"id","parameterOperator":0,"parameterPosition":1},{"columnName":"","defaultValue":"xx","exampleValue":"","isRequiredParameter":true,"parameterDataType":0,"parameterDescription":"","parameterName":"cc","parameterOperator":2,"parameterPosition":2}],"serviceContentType":1,"serviceHost":"http://www.baidu.com","servicePath":"/[uid]","serviceRequestBodyDescription":"body","successfulResultSample":"success"}
   */
  registrationDetails?: string;
  /**
   * @remarks
   * The format of the data to be requested. Valid values:
   * 
   * *   0: XML format
   * *   1: JSON format
   * *   2: form format
   * 
   * @example
   * 0
   */
  requestContentType?: number;
  /**
   * @remarks
   * The request method of the API. Valid values: 0, 1, 2, and 3. The value 0 indicates the GET method. The value 1 indicates the POST method. The value 2 indicates the PUT method. The value 3 indicates the DELETE method. APIs generated in wizard or script mode support the GET and POST methods. APIs generated by registration support the GET, POST, PUT, and DELETE methods.
   * 
   * This parameter is required.
   * 
   * @example
   * 0
   */
  requestMethod?: number;
  /**
   * @remarks
   * The ID of the exclusive resource group.
   * 
   * @example
   * 3242432423
   */
  resourceGroupId?: number;
  /**
   * @remarks
   * The format in which the response of the API request is returned. Valid values: 0 and 1. The value 0 indicates the JSON format. The value 1 indicates the XML format. APIs generated in wizard or script mode support the JSON format. APIs generated by registration support the JSON and XML formats.
   * 
   * This parameter is required.
   * 
   * @example
   * 0
   */
  responseContentType?: number;
  /**
   * @remarks
   * The details of the API generated in script mode. For more information, see the scriptDetails parameter returned by the [GetDataServiceApi](https://help.aliyun.com/document_detail/174013.html) operation.
   * 
   * @example
   * {"isPagedResponse":false,"script":"select id as id1, name as name1 from person where id=${inputid}","scriptConnection":{"connectionId":122786,"tableName":"person"},"scriptRequestParameters":[{"defaultValue":"","exampleValue":"","isRequiredParameter":true,"parameterDataType":0,"parameterDescription":"","parameterName":"inputid","parameterOperator":0,"parameterPosition":1}],"scriptResponseParameters":[{"exampleValue":"","parameterDataType":0,"parameterDescription":"","parameterName":"id1"},{"exampleValue":"","parameterDataType":0,"parameterDescription":"","parameterName":"name1"}]}
   */
  scriptDetails?: string;
  /**
   * @remarks
   * *   The SQL mode. Valid values: 0: The basic mode is used.
   * *   1: Mybatis is used.
   * 
   * @example
   * 0
   */
  sqlMode?: number;
  /**
   * @remarks
   * The tenant ID.
   * 
   * @example
   * 10001
   */
  tenantId?: number;
  /**
   * @remarks
   * The timeout period of the API request. Unit: milliseconds. Valid values: (0,30000].
   * 
   * This parameter is required.
   * 
   * @example
   * 10000
   */
  timeout?: number;
  /**
   * @remarks
   * The scope in which the API is visible. Valid values: 0 and 1. The value 0 indicates that the API is visible to all members in the workspace. The value 1 indicates that the API is visible only to its owner.
   * 
   * This parameter is required.
   * 
   * @example
   * 0
   */
  visibleRange?: number;
  /**
   * @remarks
   * The details of the API generated in wizard mode. For more information, see the WizardDetails parameter returned by the [GetDataServiceApi](https://help.aliyun.com/document_detail/174013.html) operation.
   * 
   * @example
   * {"isPagedResponse":true,"wizardConnection":{"connectionId":122786,"tableName":"person"},"wizardRequestParameters":[{"columnName":"id","defaultValue":"","exampleValue":"1","isRequiredParameter":true,"parameterDataType":2,"parameterDescription":"","parameterName":"id","parameterOperator":0,"parameterPosition":0}],"wizardResponseParameters":[{"columnName":"id","exampleValue":"11","parameterDataType":2,"parameterDescription":"","parameterName":"id"}]}
   */
  wizardDetails?: string;
  static names(): { [key: string]: string } {
    return {
      apiDescription: 'ApiDescription',
      apiMode: 'ApiMode',
      apiName: 'ApiName',
      apiPath: 'ApiPath',
      folderId: 'FolderId',
      groupId: 'GroupId',
      projectId: 'ProjectId',
      protocols: 'Protocols',
      registrationDetails: 'RegistrationDetails',
      requestContentType: 'RequestContentType',
      requestMethod: 'RequestMethod',
      resourceGroupId: 'ResourceGroupId',
      responseContentType: 'ResponseContentType',
      scriptDetails: 'ScriptDetails',
      sqlMode: 'SqlMode',
      tenantId: 'TenantId',
      timeout: 'Timeout',
      visibleRange: 'VisibleRange',
      wizardDetails: 'WizardDetails',
    };
  }

  static types(): { [key: string]: any } {
    return {
      apiDescription: 'string',
      apiMode: 'number',
      apiName: 'string',
      apiPath: 'string',
      folderId: 'number',
      groupId: 'string',
      projectId: 'number',
      protocols: 'string',
      registrationDetails: 'string',
      requestContentType: 'number',
      requestMethod: 'number',
      resourceGroupId: 'number',
      responseContentType: 'number',
      scriptDetails: 'string',
      sqlMode: 'number',
      tenantId: 'number',
      timeout: 'number',
      visibleRange: 'number',
      wizardDetails: 'string',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

