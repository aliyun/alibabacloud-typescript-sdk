// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';
import { EvaluationConfig } from "./EvaluationConfig";
import { UpdateOnlineEvalTaskRequestFilters } from "./UpdateOnlineEvalTaskRequestFilters";
import { ModelConfig } from "./ModelConfig";


export class UpdateOnlineEvalTaskRequest extends $dara.Model {
  /**
   * @remarks
   * The user-defined name of the LLM application.
   * 
   * @example
   * my-llm-one
   */
  appName?: string;
  /**
   * @remarks
   * The description of the task.
   * 
   * @example
   * The purpose of the task is xxx.
   */
  description?: string;
  /**
   * @remarks
   * The end time of the trace data, in UTC format.
   * 
   * @example
   * 2024-09-02 22:24:00
   */
  endTime?: string;
  /**
   * @remarks
   * This configuration structure defines the JSON paths needed to extract specific values from trace data in JSON format. EvaluationConfig defines these JSON paths.
   */
  evaluationConfig?: EvaluationConfig;
  /**
   * @remarks
   * The evaluation task must search for a certain amount of trace data generated by the user application as input data for the evaluation. This list defines the search filter conditions.
   */
  filters?: UpdateOnlineEvalTaskRequestFilters[];
  /**
   * @remarks
   * The access configuration structure of the model used in the evaluation.
   */
  modelConfig?: ModelConfig;
  /**
   * @remarks
   * The evaluation task must search for a certain amount of trace data generated by the user application as input data for the evaluation. This is the width of the time window for each search of input data.
   * 
   * @example
   * 10
   */
  samplingFrequencyMinutes?: number;
  /**
   * @remarks
   * The percentage of data found in a time window that truly serves as evaluation input data. For example, 100 indicates that all data searched is used as evaluation input. 20 indicates that 20% of the found data is randomly selected as evaluation input.
   * 
   * @example
   * 50
   */
  samplingRatio?: number;
  /**
   * @remarks
   * The start time of the trace data, in UTC format.
   * 
   * @example
   * 2024-07-31 08:30:00
   */
  startTime?: string;
  /**
   * @remarks
   * The task name.
   * 
   * @example
   * foo model application performance evaluation
   */
  taskName?: string;
  static names(): { [key: string]: string } {
    return {
      appName: 'AppName',
      description: 'Description',
      endTime: 'EndTime',
      evaluationConfig: 'EvaluationConfig',
      filters: 'Filters',
      modelConfig: 'ModelConfig',
      samplingFrequencyMinutes: 'SamplingFrequencyMinutes',
      samplingRatio: 'SamplingRatio',
      startTime: 'StartTime',
      taskName: 'TaskName',
    };
  }

  static types(): { [key: string]: any } {
    return {
      appName: 'string',
      description: 'string',
      endTime: 'string',
      evaluationConfig: EvaluationConfig,
      filters: { 'type': 'array', 'itemType': UpdateOnlineEvalTaskRequestFilters },
      modelConfig: ModelConfig,
      samplingFrequencyMinutes: 'number',
      samplingRatio: 'number',
      startTime: 'string',
      taskName: 'string',
    };
  }

  validate() {
    if(this.evaluationConfig && typeof (this.evaluationConfig as any).validate === 'function') {
      (this.evaluationConfig as any).validate();
    }
    if(Array.isArray(this.filters)) {
      $dara.Model.validateArray(this.filters);
    }
    if(this.modelConfig && typeof (this.modelConfig as any).validate === 'function') {
      (this.modelConfig as any).validate();
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

