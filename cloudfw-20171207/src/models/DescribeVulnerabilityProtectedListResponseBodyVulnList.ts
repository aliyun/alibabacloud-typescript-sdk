// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';
import { DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList } from "./DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList";


export class DescribeVulnerabilityProtectedListResponseBodyVulnList extends $dara.Model {
  /**
   * @remarks
   * The number of vulnerability attacks.
   * 
   * @example
   * 0
   */
  attackCnt?: number;
  /**
   * @remarks
   * The attack type of the vulnerability prevention event. Valid values:
   * 
   * *   **1**: suspicious connection
   * *   **2**: command execution
   * *   **3**: brute-force attack
   * *   **4**: scanning
   * *   **5**: others
   * *   **6**: information leakage
   * *   **7**: DoS attack
   * *   **8**: buffer overflow attack
   * *   **9**: web attack
   * *   **10**: webshell
   * *   **11**: computer worm
   * *   **12**: mining
   * *   **13**: reverse shell
   * 
   * @example
   * 13
   */
  attackType?: number;
  /**
   * @remarks
   * The IDs of associated basic protection policies.
   * 
   * @example
   * 12,12
   */
  basicRuleIds?: string;
  /**
   * @remarks
   * The CVE IDs.
   * 
   * @example
   * 12112131123, 1231123112
   */
  cveId?: string;
  /**
   * @remarks
   * The time when the first attack was launched.
   * 
   * @example
   * 1608687364
   */
  firstTime?: number;
  /**
   * @remarks
   * Indicates whether you need to pay special attention to the vulnerability. Valid values:
   * 
   * *   **0**: no
   * *   **1**: yes
   * 
   * @example
   * 0
   */
  highlightTag?: number;
  /**
   * @remarks
   * The time when the last attack was launched.
   * 
   * @example
   * 1608687364
   */
  lastTime?: number;
  /**
   * @remarks
   * The UID of the member that is managed by your Alibaba Cloud account.
   * 
   * @example
   * 119384235299****
   */
  memberUid?: string;
  /**
   * @remarks
   * Indicates whether the basic protection policy that related to the vulnerability is enabled. Valid values:
   * 
   * *   **true**
   * *   **false**
   * 
   * >  If the value of this parameter is true, you must set the action of the basic protection policy related to the vulnerability to Block.
   * 
   * @example
   * false
   */
  needOpenBasicRule?: boolean;
  /**
   * @remarks
   * The UUIDs of the basic protection policies for which the action needs to be changed to Block.
   * 
   * @example
   * UUID-1231231
   */
  needOpenBasicRuleUuids?: string;
  /**
   * @remarks
   * Indicates whether Threat Engine Mode needs to be configured when you enable protection. Valid values:
   * 
   * *   **true**
   * *   **false**
   * 
   * @example
   * true
   */
  needOpenRunMode?: boolean;
  /**
   * @remarks
   * Indicates whether the virtual patching policy that related to the vulnerability is enabled. Valid values:
   * 
   * *   **true**
   * *   **false**
   * 
   * >  If the value of this parameter is true, you must set the action of the virtual patching policy that related to the vulnerability to Block.
   * 
   * @example
   * true
   */
  needOpenVirtualPatche?: boolean;
  /**
   * @remarks
   * The UUIDs of the virtual patching policies for which the action needs to be changed to Block.
   * 
   * @example
   * UUID-1231231234
   */
  needOpenVirtualPatcheUuids?: string;
  /**
   * @remarks
   * The type of the rule group. Valid values:
   * 
   * *   **1** (default): loose
   * *   **2**: medium
   * *   **3**: strict
   * 
   * @example
   * 1
   */
  needRuleClass?: number;
  /**
   * @remarks
   * The number of assets on which vulnerabilities are detected.
   * 
   * @example
   * 0
   */
  resourceCnt?: number;
  /**
   * @remarks
   * The assets on which the vulnerability is detected.
   */
  resourceList?: DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList[];
  /**
   * @remarks
   * The IDs of associated virtual patching policies.
   * 
   * @example
   * 13,13
   */
  virtualPatcheIds?: string;
  /**
   * @remarks
   * The code of the vulnerability.
   * 
   * @example
   * dedecms-archive.helper.php-vul
   */
  vulnKey?: string;
  /**
   * @remarks
   * The risk level of the vulnerability. Valid values:
   * 
   * *   **high**
   * *   **medium**
   * *   **low**
   * 
   * @example
   * high
   */
  vulnLevel?: string;
  /**
   * @remarks
   * The name of the vulnerability.
   * 
   * @example
   * Deserialization vulnerability of arbitrary code execution in Fastjson 1.2.80 and earlier versions
   */
  vulnName?: string;
  /**
   * @remarks
   * The status of the vulnerability prevention feature. Valid values:
   * 
   * *   **partProtected**: enabled for partial assets
   * *   **protected**: enabled
   * *   **unProtected**: disabled
   * 
   * @example
   * protected
   */
  vulnStatus?: string;
  /**
   * @remarks
   * The type of the vulnerability. Valid values:
   * 
   * *   **emg**: urgent vulnerability
   * *   **webcms**: Web-CMS vulnerability
   * *   **app**: application vulnerability
   * 
   * @example
   * emg
   */
  vulnType?: string;
  static names(): { [key: string]: string } {
    return {
      attackCnt: 'AttackCnt',
      attackType: 'AttackType',
      basicRuleIds: 'BasicRuleIds',
      cveId: 'CveId',
      firstTime: 'FirstTime',
      highlightTag: 'HighlightTag',
      lastTime: 'LastTime',
      memberUid: 'MemberUid',
      needOpenBasicRule: 'NeedOpenBasicRule',
      needOpenBasicRuleUuids: 'NeedOpenBasicRuleUuids',
      needOpenRunMode: 'NeedOpenRunMode',
      needOpenVirtualPatche: 'NeedOpenVirtualPatche',
      needOpenVirtualPatcheUuids: 'NeedOpenVirtualPatcheUuids',
      needRuleClass: 'NeedRuleClass',
      resourceCnt: 'ResourceCnt',
      resourceList: 'ResourceList',
      virtualPatcheIds: 'VirtualPatcheIds',
      vulnKey: 'VulnKey',
      vulnLevel: 'VulnLevel',
      vulnName: 'VulnName',
      vulnStatus: 'VulnStatus',
      vulnType: 'VulnType',
    };
  }

  static types(): { [key: string]: any } {
    return {
      attackCnt: 'number',
      attackType: 'number',
      basicRuleIds: 'string',
      cveId: 'string',
      firstTime: 'number',
      highlightTag: 'number',
      lastTime: 'number',
      memberUid: 'string',
      needOpenBasicRule: 'boolean',
      needOpenBasicRuleUuids: 'string',
      needOpenRunMode: 'boolean',
      needOpenVirtualPatche: 'boolean',
      needOpenVirtualPatcheUuids: 'string',
      needRuleClass: 'number',
      resourceCnt: 'number',
      resourceList: { 'type': 'array', 'itemType': DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList },
      virtualPatcheIds: 'string',
      vulnKey: 'string',
      vulnLevel: 'string',
      vulnName: 'string',
      vulnStatus: 'string',
      vulnType: 'string',
    };
  }

  validate() {
    if(Array.isArray(this.resourceList)) {
      $dara.Model.validateArray(this.resourceList);
    }
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

