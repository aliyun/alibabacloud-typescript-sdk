// This file is auto-generated, don't edit it
import * as $dara from '@darabonba/typescript';


export class GetAsyncTaskResponseBodyData extends $dara.Model {
  /**
   * @remarks
   * The asynchronous task ID.
   * 
   * @example
   * 000e89fb-cf8f-11e9-8ab4-b6e98080****
   */
  asyncTaskId?: string;
  /**
   * @remarks
   * The total number of asynchronous tasks that are processed. Example: the number of files that are packaged and downloaded on the server.
   * 
   * @example
   * 100
   */
  consumedProcess?: string;
  /**
   * @remarks
   * The error code of the asynchronous task.
   * 
   * @example
   * InternalError
   */
  errCode?: number;
  /**
   * @remarks
   * The error message of the asynchronous task.
   * 
   * @example
   * The request has been failed due to some unknown error. Please try again later.
   */
  message?: string;
  /**
   * @remarks
   * The task status.
   * 
   * Valid values:
   * 
   * *   Failed: The task failed.
   * 
   *     <!-- -->
   * 
   *     <!-- -->
   * 
   *     <!-- -->
   * 
   * *   Running: The task was running.
   * 
   *     <!-- -->
   * 
   *     <!-- -->
   * 
   *     <!-- -->
   * 
   * *   PartialSucceed: The task did not completely succeed.
   * 
   *     <!-- -->
   * 
   *     <!-- -->
   * 
   *     <!-- -->
   * 
   * *   Succeed: The task succeeded.
   * 
   *     <!-- -->
   * 
   *     <!-- -->
   * 
   *     <!-- -->
   * 
   * @example
   * Failed
   */
  status?: string;
  /**
   * @remarks
   * The total number of asynchronous tasks to be processed, such as the amount of files to be downloaded and packaged on the server.
   * 
   * @example
   * 1000
   */
  totalProcess?: number;
  /**
   * @remarks
   * The URL to download data generated by the asynchronous task. Example: the URL to package and download tasks on the server.
   * 
   * @example
   * https://data.aliyunpds.com/hz22%2F5d5b986facbec311ef844c25954f96821497b383%2F5d5b986f955410dd991646bb87c6b4e899eff525?Expires=xxx&OSSAccessKeyId=xxx&Signature=xxx
   */
  url?: string;
  static names(): { [key: string]: string } {
    return {
      asyncTaskId: 'AsyncTaskId',
      consumedProcess: 'ConsumedProcess',
      errCode: 'ErrCode',
      message: 'Message',
      status: 'Status',
      totalProcess: 'TotalProcess',
      url: 'Url',
    };
  }

  static types(): { [key: string]: any } {
    return {
      asyncTaskId: 'string',
      consumedProcess: 'string',
      errCode: 'number',
      message: 'string',
      status: 'string',
      totalProcess: 'number',
      url: 'string',
    };
  }

  validate() {
    super.validate();
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

